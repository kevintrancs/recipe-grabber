{
  "_args": [
    [
      {
        "raw": "webpack-command",
        "scope": null,
        "escapedName": "webpack-command",
        "name": "webpack-command",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/ktran/Documents/Recipe/client"
    ]
  ],
  "_from": "webpack-command@latest",
  "_id": "webpack-command@0.4.1",
  "_inCache": true,
  "_location": "/webpack-command",
  "_nodeVersion": "10.1.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/webpack-command_0.4.1_1530890154226_0.23859962778081245"
  },
  "_npmUser": {
    "name": "shellscape",
    "email": "andrew@shellscape.org"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "color-convert": "1.9.2",
    "escape-string-regexp": "1.0.5",
    "has-flag": "3.0.0"
  },
  "_requested": {
    "raw": "webpack-command",
    "scope": null,
    "escapedName": "webpack-command",
    "name": "webpack-command",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/webpack-command/-/webpack-command-0.4.1.tgz",
  "_shasum": "3f88aae87c28292ed0a97293615a2e962a1c66f4",
  "_shrinkwrap": null,
  "_spec": "webpack-command",
  "_where": "/Users/ktran/Documents/Recipe/client",
  "author": {
    "name": "Andrew Powell",
    "email": "andrew@shellscape.org"
  },
  "bin": {
    "webpack": "lib/cli.js",
    "webpack-command": "lib/cli.js",
    "wp": "lib/cli.js"
  },
  "bugs": {
    "url": "https://github.com/webpack-contrib/webpack-command/issues"
  },
  "dependencies": {
    "@webpack-contrib/config-loader": "^1.2.0",
    "@webpack-contrib/schema-utils": "^1.0.0-beta.0",
    "camelcase": "^5.0.0",
    "chalk": "^2.3.2",
    "debug": "^3.1.0",
    "decamelize": "^2.0.0",
    "enhanced-resolve": "^4.0.0",
    "import-local": "^1.0.0",
    "isobject": "^3.0.1",
    "loader-utils": "^1.1.0",
    "log-symbols": "^2.2.0",
    "loud-rejection": "^1.6.0",
    "meant": "^1.0.1",
    "meow": "^5.0.0",
    "merge-options": "^1.0.0",
    "object.values": "^1.0.4",
    "opn": "^5.3.0",
    "ora": "^2.1.0",
    "plur": "^3.0.0",
    "pretty-bytes": "^5.0.0",
    "strip-ansi": "^4.0.0",
    "text-table": "^0.2.0",
    "titleize": "^1.0.1",
    "update-notifier": "^2.3.0",
    "v8-compile-cache": "^2.0.0",
    "webpack-log": "^1.1.2",
    "wordwrap": "^1.0.0"
  },
  "description": "A superior CLI experience for webpack. Lightweight, modular, and opinionated.",
  "devDependencies": {
    "@commitlint/cli": "^6.1.3",
    "@commitlint/config-conventional": "^6.1.3",
    "@webpack-contrib/eslint-config-webpack": "^2.0.4",
    "babel-cli": "^6.26.0",
    "babel-jest": "^23.0.1",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-polyfill": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "camelcase-keys": "^4.2.0",
    "codecov": "^3.0.0",
    "conventional-github-releaser": "^2.0.2",
    "crc": "^3.5.0",
    "cross-env": "^5.1.4",
    "decamelize-keys": "^1.1.0",
    "del": "^3.0.0",
    "del-cli": "^1.1.0",
    "eslint": "^4.19.1",
    "eslint-config-webpack": "^1.2.5",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-prettier": "^2.6.0",
    "execa": "^0.10.0",
    "expect": "^23.1.0",
    "html-webpack-plugin": "^3.2.0",
    "husky": "^0.14.3",
    "istanbul": "^0.4.5",
    "jest-serializer-path": "^0.1.14",
    "jest-snapshot": "^23.0.1",
    "lint-staged": "^7.0.4",
    "memory-fs": "^0.4.1",
    "minimist": "^1.2.0",
    "minimist-options": "^3.0.2",
    "mocha": "^5.1.1",
    "nsp": "^3.2.1",
    "nyc": "^12.0.2",
    "pre-commit": "^1.2.2",
    "prettier": "^1.11.1",
    "standard-version": "^4.3.0",
    "stylelint-webpack-plugin": "^0.10.4",
    "webpack": "^4.6.0",
    "webpack-defaults": "^2.3.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-4u23PTUcjLJCcPqs53ugjFIp2c3I6rGZgYYwgD7LPPU745MzbS3tLXuOpKdgFNN+qDdWtzfLKZhMTQyf7jklcg==",
    "shasum": "3f88aae87c28292ed0a97293615a2e962a1c66f4",
    "tarball": "https://registry.npmjs.org/webpack-command/-/webpack-command-0.4.1.tgz",
    "fileCount": 32,
    "unpackedSize": 77947,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbP4eqCRA9TVsSAnZWagAAUAUQAJ78NErYuBSnb/iV+ojC\nyzEYiWR55dYzJvpZvjf4WVlcEOsdUoNP9ifulkAfEZC6GOjyLWvYesKcmLtZ\nt+PU+gVRxHJxz+qLQRbLOnQXnwKTWl05baHjGhGyBp7b071EuKVCSCHLIWBg\n/BL3DrJh5rEtyavSJ5WBW3RAVbcO/urq2tCVOYvsSEZ/ZYCZ+FXba0zZlN97\niHPArT4skdAGwEsuTQKJZPKcdP42xp+JyEqzncofFWL88OoAzlEnUUpu95PT\njg5nXDRbP/6cYc+yUo00o/SBwlXrHxbJVril2862INeZ4tr0ihvwfufTUK48\n283cfgtfrgEJDDxhf511cWg5+uylt7/uXZv53dsG7amo/SvP0cidWDKLLlW/\nRiFUTXFI3e0acg3ESm+QAtxKJUomCMsZiIEU8E5V6M98A56AmR+RnKAFuxZM\nu3vlNo4apyRoCTOtMJVT49j0CqEb/4Z0KHiqpR+R+FslW1Zk+ZHZi+cyN1jY\nmZBNTRltT2fami2wwTtxgAqf65ZuPw0xytcUM9bOsSzEYiU4mSAdR9R2TW0w\nrKP/JJEWDyzkDva1aBIECiLu7HSidB3RMjNaOx2T9ZnezNejd/EJ2G0X7BsQ\nBBWXw2TUdlCSLGvNJ24/mON+dSonaFI4eH5IfM6doi0jnjiEamX0XttAhnQN\nbgME\r\n=cQSG\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 6.9.0 <7.0.0 || >= 8.9.0"
  },
  "files": [
    "data/",
    "lib/"
  ],
  "gitHead": "01048bbbebc06f998d6101a087e7f69f15561df7",
  "homepage": "https://github.com/webpack-contrib/webpack-command",
  "keywords": [
    "webpack"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "d3viant0ne",
      "email": "wiens.joshua@gmail.com"
    },
    {
      "name": "shellscape",
      "email": "andrew@shellscape.org"
    }
  ],
  "name": "webpack-command",
  "nyc": {
    "include": [
      "lib/**/*.js"
    ]
  },
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^4.4.0"
  },
  "pre-commit": "lint-staged",
  "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# webpack-command\n\nA superior CLI experience for webpack. Lightweight, modular, and opinionated.\n\nFor users coming from `webpack-cli`, please read about\n[the differences](#differences-with-webpack-cli) between this module and\n`webpack-cli`.\n\n## Requirements\n\nThis module requires a minimum of Node v6.14.0 and Webpack v4.0.0.\n\n`webpack-command` and `webpack-cli` cannot be installed at the same time, as\nthey both export a bin file named `webpack`. When trying `webpack-command`,\nplease `npm uninstall webpack-cli` first.\n\n## Benefits\n\n`webpack-command` has many advantages over other CLI experiences for `webpack`.\nThese include:\n\n- [Extendable Webpack Configurations](#extendable-webpack-configurations). A\nconfiguration file can extend the properties and collections from base\nconfigurations, and are filtered intelligently.\n- Custom Reporters ðŸ¤¯\n- A beautiful default user experience with output driven by\n[`webpack-stylish`](https://www.npmjs.com/package/webpack-stylish)\n- Support for `webpack` configuration in any language or compiler that provides\na `require` hook\n- Support for `webpack` configuration in `JSON`, `YAML`, or `JavaScript`\n- Validation of commands, entries, and flags before further execution\n- Extensible third-party commands. Include only what you need!\n- A full test suite with 220 tests and 95% coverage (so close to 100% ðŸ’ª)\n- A ~~93%~~ 24% smaller package cost versus `webpack-cli` (it used to be 93%,\n  they got wise after _webpack-command_ was released)\n- Highly focused on the User Experience and detail\n\nAnd last but not least, Did-You-Mean suggestions for flags:\n\n<img width=\"427\" src=\"https://raw.githubusercontent.com/webpack-contrib/webpack-command/master/assets/did-you-mean.png\" alt=\"did you mean\">\n\n## Getting Started\n\nTo begin, you'll need to install `webpack-command`:\n\n```console\n$ npm install webpack-command --save-dev\n```\n\n## CLI\n\nThe primary binary for webpack-command is `wp` (because who doesn't like to save\nkeystrokes!?) Although, you may also use the `webpack` binary as per usual if\nyour setup installs this module _after_ webpack, and the two don't conflict.\n\n```console\n$ wp --help\n\n  A superior CLI experience for webpack. Lightweight, modular, and opinionated.\n\n  Usage\n    $ webpack [<config>, ...options]\n    $ webpack <entry-file> [...<entry-file>] <output-file>\n    $ webpack <command> [...options]\n\n  Options\n    --context                     The root directory for resolving entry point and stats\n    --debug                       Switch loaders to debug mode\n    --devtool                     Enable devtool for better debugging experience.\n                                  e.g. --devtool eval-cheap-module-source-map\n    --entry                       The entry point\n    --help                        Show usage information and the options listed here\n    --log-level                   Limit all process console messages to a specific level and above\n                                  Levels: trace, debug, info, warn, error, silent\n    --log-time                    Instruct the logger for webpack-serve and dependencies to display a timestamp\n    --progress                    Instructs webpack to track and display build progress\n    --reporter                    Specifies the reporter to use for generating console output for a build\n    --require                     Preload one or more modules before loading the webpack configuration\n                                  Typically used for language-specific require hooks\n    --run-dev                     An alias for --debug --devtool eval-cheap-module-source-map --output-pathinfo\n    --run-prod                    An alias for --optimize-minimize --define process.env.NODE_ENV=\"production\"\n    --version                     Display the webpack-command version\n    --watch                       Watch the filesystem for changes\n\n  Advanced\n    --bail                        Abort the compilation on first error\n    --cache                       Enable in memory caching\n    --define                      Define any free var in the bundle\n    --hot                         Enables Hot Module Replacement\n    --plugin                      Load this plugin\n    --prefetch                    Prefetch this request\n                                  e.g. --prefetch ./file.js\n    --profile                     Profile the compilation and include information in stats\n    --provide                     Provide these modules as free vars in all modules\n                                  e.g. --provide.jQuery jquery\n    --records-input-path          Path to the records file (reading)\n    --records-output-path         Path to the records file (writing)\n    --records-path                Path to the records file\n    --target                      The targeted execution environment\n    --watch-aggregate-timeout     Timeout for gathering changes while watching\n    --watch-poll                  The polling interval for watching (also enable polling)\n    --watch-stdin                 Exit the process when stdin is closed\n\n  Configuration File\n    --config                      Path to the config file\n    --config-name                 Name of the config to use\n    --config-register             Deprecated. Please use --require.\n    --mode                        Specifies the build mode to use; development or production\n\n  Modules\n    --module-bind                 Bind an extension to a loader\n    --module-bind-post            Bind an extension to a postLoader\n    --module-bind-pre             Bind an extension to a preLoader\n\n  Optimization\n    --optimize-max-chunks         Try to keep the chunk count below a limit\n    --optimize-min-chunk-size     Try to keep the chunk size above a limit\n    --optimize-minimize           Minimize javascript and switches loaders to minimizing\n\n  Output\n    --output                      The output path and file for compilation assets\n    --output-chunk-filename       The output filename for additional chunks\n    --output-filename             The output filename of the bundle\n    --output-jsonp-function       The name of the JSONP function used for chunk loading\n    --output-library              Expose the exports of the entry point as library\n    --output-library-target       The type for exposing the exports of the entry point as library\n    --output-path                 The output path for compilation assets\n    --output-pathinfo             Include a comment with the request for every dependency (require, import, etc.)\n    --output-public-path          The public path for the assets\n    --output-source-map-filename  The output filename for the SourceMap\n\n  Resolver\n    --resolve-alias               Setup a module alias for resolving\n                                  e.g. --resolve-alias.jquery jquery.plugin\n    --resolve-extensions          Setup extensions that should be used to resolve modules\n                                  e.g. .es6,.js\n    --resolve-loader-alias        Setup a loader alias for resolving\n\n\n    For further documentation, visit https://webpack.js.org/api/cli\n\n  Commands\n    help\n    teach\n\n    Type `webpack help <command>` for more information\n```\n\nAs a convenience for alternative package managers, the `webpack-command` binary\nis also installed with this package.\n\n## Extendable Webpack Configurations\n\nThis module supports extending webpack configuration files with\n[ESLint-style](https://eslint.org/docs/user-guide/configuring#extending-configuration-files)\n`extends` functionality. This feature allows users to create a \"base\" config and\nin essence, \"inherit\" from that base config in a separate config. A bare-bones\nexample:\n\n```js\n// base.config.js\nmodule.exports = {\n  name: 'base',\n  mode: 'development',\n  plugins: [...]\n}\n```\n\n```js\n// webpack.config.js\nmodule.exports = {\n  extends: path.join(..., 'base-config.js'),\n  name: 'dev'\n```\n\nThe resulting configuration object would resemble:\n\n```js\n{\n  name: 'dev',\n  mode: 'development',\n  plugins: [...]\n}\n```\n\n[Read More about Extending Configuration Files](https://github.com/webpack-contrib/config-loader/blob/master/docs/EXTENDS.md)\n\n## Commands\n\n`webpack-command` allows users to extend the `webpack` CLI experience by\nincluding a few helpful built-in commands, and providing a means to develop\nthird-party commands.\n\n### Built-In Commands\n\n- [Help Command](docs/HelpCommand.md)\n- [Teach Command](docs/TeachCommand.md)\n\n## Flags\n\nFor more documentation on flags, please see the\n[`webpack-cli` documentation](https://webpack.js.org/api/cli/).\n\n## Differences With `webpack-cli`\n\nWhile this project aims for parity with `webpack-cli` in nearly all aspects,\nthere are some notable differences. Included in those differences is the note\nthat this module includes the bare minimum of commands to provide a `webpack`\nCLI. Commands like `init`, `migrate`, and `update` are relegated to separate,\nuser-installed modules.\n\nThat said, the following differences should also be noted:\n\n### The `--env` Flag is Nuked\n\n[Environment Variables](https://en.wikipedia.org/wiki/Environment_variable) have\nbeen around a very, very long time. `webpack-cli` chose to introduce a feature\nthat let users specify environment variables via a flag. This module does not\ninclude that feature. Instead, users should make use of environment variables\nthe traditional, standard way:\n\n`$ NEAT_VAR=woo webpack ...`\n\nAnd access the values via `process.env`. Alternatively, if users are in need of\ncross-platform environment variables, a tool such as\n[`cross-env`](https://www.npmjs.com/package/cross-env) should be leveraged.\n\n### Key=Value Pairs\n\nCertain flags passed in `webpack-cli` allow for a key-value pair for\npairing an alias with the alias value. e.g. `--entry name=file`. This module\nadopts a CLI-standard approach by using the syntax `--flag.key value` instead,\nand does not support the `key=value` syntax.\n\n### Entries\n\nSpecifying entries by either flag (`--flag`) or input (`webpack <file>`) require\nthat the file or directory specified exist.\n\nEntries passed with a comma-separated value `--entry file,file2` are deprecated\nand should be migrated to use the CLI-standard `--entry file --entry file2`\nsyntax.\n\nEntries passed by flag in `webpack-cli` using `--entry name=file` should be\nmigrated to use the `--entry.name file` syntax.\n\n### Resolve Alias\n\nResolve aliases passed by flag in `webpack-cli` using\n`--resolve-alias alias=value` should be migrated to use the `--resolve-alias.{alias} {value}`\nsyntax.\n\n### Resolve Loader Alias\n\nResolve aliases passed by flag in `webpack-cli` using\n`--resolve-loader-alias alias=value` should be migrated to use the\n`--resolve-loader-alias.alias value` syntax.\n\n## Reporters\n\n`webpack-command` supports custom, user-defined reporters which allow users\nfull control over how build data is presented. By default, it ships with two\navailable reporters:\n\n#### `basic`\n\nDisplays the default `webpack` output, the same you'll see\nusing `webpack-cli`.\n\n#### `stylish`\n\nThe **default** reporter and displays beautiful output using the same code\nthat drives [`webpack-stylish`](https://www.npmjs.com/package/webpack-stylish).\n\nBuilding your own reporter is as easy as inheriting from the `Reporter` class\nlocated at `lib/reporters/Reporter.js`.\n\n## Configuration Languages and Compilers\n\n`webpack-command` allows users to leverage any language that provides a require\nhook. To leverage this feature, define your configs as such for the following\nlanguages/compilers:\n\n- Babel ES6 Modules: `webpack.config.js` or `webpack.config.es6`, and use\n`--require babel-register`\n- Flow: `webpack.config.js` or `webpack.config.flow`, and use\n`--require flow-remove-types/register`\n- TypeScript: `webpack.config.ts`, and use `--require ts-node/register`\n\nOther hooks may work for additional language or compiler support.\n\n_Note: Compilers are not part of, nor built-into this module. To use a specific\ncompiler, you must install it first._\n\n## Gotchas\n\nAny entry files specified will overwrite entries in a `webpack.config.js` file\nas of [this Pull Request](https://github.com/webpack/webpack-cli/pull/358) in\n`webpack-cli`.\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n#### [CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n#### [MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/webpack-command.svg\n[npm-url]: https://npmjs.com/package/webpack-command\n\n[node]: https://img.shields.io/node/v/webpack-command.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/webpack-contrib/webpack-command.svg\n[deps-url]: https://david-dm.org/webpack-contrib/webpack-command\n\n[tests]: \thttps://img.shields.io/circleci/project/github/webpack-contrib/webpack-command.svg\n[tests-url]: https://circleci.com/gh/webpack-contrib/webpack-command\n\n[cover]: https://codecov.io/gh/webpack-contrib/webpack-command/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/webpack-command\n\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n\n[size]: https://packagephobia.now.sh/badge?p=webpack-command\n[size-url]: https://packagephobia.now.sh/result?p=webpack-command\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/webpack-command.git"
  },
  "scripts": {
    "ci:coverage": "npm run test:coverage -- --runInBand",
    "ci:lint": "npm run lint && npm run security",
    "ci:lint:commits": "commitlint --from=${CIRCLE_BRANCH} --to=${CIRCLE_SHA1}",
    "ci:test": "npm run test -- --runInBand",
    "commitlint": "commitlint",
    "commitmsg": "commitlint -e $GIT_PARAMS",
    "defaults": "webpack-defaults",
    "lint": "eslint --cache lib test",
    "lint-staged": "lint-staged",
    "prepublishOnly": "mkdir -p data && cp -r lib/commands/defaults.json data/commands.json",
    "release": "standard-version",
    "release:ci": "conventional-github-releaser -p angular",
    "release:validate": "commitlint --from=$(git describe --tags --abbrev=0) --to=$(git rev-parse HEAD)",
    "security": "nsp check",
    "test": "npm run prepublishOnly && mocha test/test.js --exit --timeout=5000",
    "test:coverage": "mkdir -p coverage && nyc --silent npm test && npm run test:coverage:report",
    "test:coverage:report": "nyc report --reporter=lcov --reporter=text-lcov --reporter=json --reporter=clover > coverage/lcov.info"
  },
  "version": "0.4.1",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": ">= 6.9.0 <7.0.0 || >= 8.9.0"
      },
      "pkgid": "webpack-command@0.4.1"
    },
    {
      "code": "ENOTSUP",
      "required": {
        "node": ">= 6.9.0 <7.0.0 || >= 8.9.0"
      },
      "pkgid": "webpack-command@0.4.1"
    }
  ]
}
