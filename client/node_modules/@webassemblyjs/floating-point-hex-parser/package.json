{
  "_args": [
    [
      {
        "raw": "@webassemblyjs/floating-point-hex-parser@1.5.13",
        "scope": "@webassemblyjs",
        "escapedName": "@webassemblyjs%2ffloating-point-hex-parser",
        "name": "@webassemblyjs/floating-point-hex-parser",
        "rawSpec": "1.5.13",
        "spec": "1.5.13",
        "type": "version"
      },
      "/Users/ktran/Documents/Recipe/client/node_modules/@webassemblyjs/wast-parser"
    ]
  ],
  "_from": "@webassemblyjs/floating-point-hex-parser@1.5.13",
  "_id": "@webassemblyjs/floating-point-hex-parser@1.5.13",
  "_inCache": true,
  "_location": "/@webassemblyjs/floating-point-hex-parser",
  "_nodeVersion": "9.3.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/floating-point-hex-parser_1.5.13_1530366257151_0.07733607941173215"
  },
  "_npmUser": {
    "name": "xtuc",
    "email": "contact@xtuc.fr"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@webassemblyjs/floating-point-hex-parser@1.5.13",
    "scope": "@webassemblyjs",
    "escapedName": "@webassemblyjs%2ffloating-point-hex-parser",
    "name": "@webassemblyjs/floating-point-hex-parser",
    "rawSpec": "1.5.13",
    "spec": "1.5.13",
    "type": "version"
  },
  "_requiredBy": [
    "/@webassemblyjs/wast-parser"
  ],
  "_resolved": "https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.5.13.tgz",
  "_shasum": "29ce0baa97411f70e8cce68ce9c0f9d819a4e298",
  "_shrinkwrap": null,
  "_spec": "@webassemblyjs/floating-point-hex-parser@1.5.13",
  "_where": "/Users/ktran/Documents/Recipe/client/node_modules/@webassemblyjs/wast-parser",
  "author": {
    "name": "Mauro Bringolf"
  },
  "bugs": {
    "url": "https://github.com/xtuc/webassemblyjs/issues"
  },
  "dependencies": {},
  "description": "A function to parse floating point hexadecimal strings as defined by the WebAssembly specification",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-vrvvB18Kh4uyghSKb0NTv+2WZx871WL2NzwMj61jcq2bXkyhRC+8Q0oD7JGVf0+5i/fKQYQSBCNMMsDMRVAMqA==",
    "shasum": "29ce0baa97411f70e8cce68ce9c0f9d819a4e298",
    "tarball": "https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.5.13.tgz",
    "fileCount": 4,
    "unpackedSize": 5029,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbN4kxCRA9TVsSAnZWagAAd/kQAI4NVzOcH/WN/+R6LeNY\nw8cRQR1HktwMPz2WWfjIDlPmTXtIsSBheIEtl/FMCSnxBA82QTEfF2HdmN6n\nBxTQfMjzIA8sn2vcNhiuhahJDuLgE766EdxAp2Z2MdYbxG8CVsoj0/N7wgUU\nDq9pUjXJN1sKd6QXKvFmW2uEnefi0b+QuVFbomuwvyKF0ht1a+H0oFgWgpCO\nuPcVA/3WeqEgfoLdrI+RULb1FBNTRw3Yzd32NKZmLb47qXiIQLKJCdQbKFDy\nJN7HMzFt97eityQthXFot3YHOH5Mp70gxeBpN9yY79zzMwwhZab6UBdFrsIv\nSg2impdO58v2ge+XHEdyRYcXoJb3NFlc6r8kwFesflRGKzroduJveXImRW5Y\nmc2H83MUu8MwMqshUT25Ty2mwYIJr6bLeGr9kB/DN9EF1j9tPkYudc5xXDsz\n19YTMDNts2n5qgVZLY0kHzUFB3Bp1z9chNfCd3H+jR58gqtudbcXSiRRuc8l\nmc1LABXqjVBQ0Y4vLx5PIaL17x3gQMj7SM+Heb/d3nAxBilu7qVq1mYXqSoW\nFnU0Hv+3GE0ZaglJFYgEp15VAbUsTfI0gNTuZ4CQxJbb4x1xQG04J6qU0PEU\nNja6YaSBwoeZyXxbs+RpIRc2eJ/2y2hYb//By0uA5jpxCN7NMNy9OSLXE5P6\nhnCg\r\n=lXLn\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "homepage": "https://github.com/xtuc/webassemblyjs#readme",
  "keywords": [
    "webassembly",
    "floating-point"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "xtuc",
      "email": "contact@xtuc.fr"
    }
  ],
  "name": "@webassemblyjs/floating-point-hex-parser",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# Parser function for floating point hexadecimals\n\n[![license](https://img.shields.io/github/license/maurobringolf/@webassemblyjs/floating-point-hex-parser.svg)]()\n[![GitHub last commit](https://img.shields.io/github/last-commit/maurobringolf/@webassemblyjs/floating-point-hex-parser.svg)]()\n[![npm](https://img.shields.io/npm/v/@webassemblyjs/floating-point-hex-parser.svg)]()\n\n> A JavaScript function to parse floating point hexadecimals as defined by the [WebAssembly specification](https://webassembly.github.io/spec/core/text/values.html#text-hexfloat).\n\n## Usage\n\n```javascript\nimport parseHexFloat from '@webassemblyjs/floating-point-hex-parser'\n\nparseHexFloat('0x1p-1')               // 0.5\nparseHexFloat('0x1.921fb54442d18p+2') // 6.283185307179586\n```\n\n## Tests\n\nThis module is tested in two ways. The first one is through a small set of test cases that can be found in [test/regular.test.js](https://github.com/maurobringolf/@webassemblyjs/floating-point-hex-parser/blob/master/test/regular.test.js). The second one is non-deterministic (sometimes called *fuzzing*):\n\n1. Generate a random IEEE754 double precision value `x`.\n1. Compute its representation `y` in floating point hexadecimal format using the C standard library function `printf` since C supports this format.\n1. Give both values to JS testcase and see if `parseHexFloat(y) === x`.\n\nBy default one `npm test` run tests 100 random samples. If you want to do more, you can set the environment variable `FUZZ_AMOUNT` to whatever number of runs you'd like. Because it uses one child process for each sample, it is really slow though. For more details about the randomized tests see [the source](https://github.com/maurobringolf/@webassemblyjs/floating-point-hex-parser/tree/master/test/fuzzing).\n\n## Links\n\n* [maurobringolf.ch/2017/12/hexadecimal-floating-point-notation/](https://maurobringolf.ch/2017/12/hexadecimal-floating-point-notation/)\n\n* [github.com/xtuc/js-webassembly-interpreter/issues/32](https://github.com/xtuc/js-webassembly-interpreter/issues/32)\n\n* [github.com/WebAssembly/design/issues/292](https://github.com/WebAssembly/design/issues/292)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xtuc/webassemblyjs.git"
  },
  "scripts": {
    "build-fuzzer": "[ -f ./test/fuzzing/parse.out ] || gcc ./test/fuzzing/parse.c -o ./test/fuzzing/parse.out -lm -Wall"
  },
  "version": "1.5.13"
}
