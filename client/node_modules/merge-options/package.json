{
  "_args": [
    [
      {
        "raw": "merge-options@^1.0.0",
        "scope": null,
        "escapedName": "merge-options",
        "name": "merge-options",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/ktran/Documents/Recipe/client/node_modules/webpack-command"
    ]
  ],
  "_from": "merge-options@>=1.0.0 <2.0.0",
  "_id": "merge-options@1.0.1",
  "_inCache": true,
  "_location": "/merge-options",
  "_nodeVersion": "9.11.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/merge-options_1.0.1_1525080161386_0.6992930103252353"
  },
  "_npmUser": {
    "name": "schnittstabil",
    "email": "michael@schnittstabil.de"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "merge-options@^1.0.0",
    "scope": null,
    "escapedName": "merge-options",
    "name": "merge-options",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@webpack-contrib/config-loader",
    "/webpack-command"
  ],
  "_resolved": "https://registry.npmjs.org/merge-options/-/merge-options-1.0.1.tgz",
  "_shasum": "2a64b24457becd4e4dc608283247e94ce589aa32",
  "_shrinkwrap": null,
  "_spec": "merge-options@^1.0.0",
  "_where": "/Users/ktran/Documents/Recipe/client/node_modules/webpack-command",
  "author": {
    "name": "Michael Mayer",
    "email": "michael@schnittstabil.de",
    "url": "schnittstabil.de"
  },
  "bugs": {
    "url": "https://github.com/schnittstabil/merge-options/issues"
  },
  "dependencies": {
    "is-plain-obj": "^1.1"
  },
  "description": "Merge Option Objects",
  "devDependencies": {
    "ava": "^0.25",
    "coveralls": "^3.0",
    "nyc": "^11.7",
    "rimraf": "^2.5",
    "xo": "^0.20"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-iuPV41VWKWBIOpBsjoxjDZw8/GbSfZ2mk7N1453bwMrfzdrIk7EzBd+8UVR6rkw67th7xnk9Dytl3J+lHPdxvg==",
    "shasum": "2a64b24457becd4e4dc608283247e94ce589aa32",
    "tarball": "https://registry.npmjs.org/merge-options/-/merge-options-1.0.1.tgz",
    "fileCount": 4,
    "unpackedSize": 9118,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa5uBiCRA9TVsSAnZWagAAjY4P/1PoZ2Zm3lQ4zxr4aqhv\n0ICxUFU24WErV/U8X46ZjLXHOkjhPt9eLgm0q894Fi2h+TnE4SL9oddJUpy6\nkQf/uc/a/XOrYi0egMrqAtcGQyED/rWMqz0kbihMVdQE21bsM6dTZHAgqIwB\nxxwu43UHzXOQ4jVB2tRXIFJmcFcmbqXDlbDUdIwN5K5voZmdGmSInj3yH/1T\nEhZ5OLNWOQbQ7sIjshec+FO5vgt0iHWe+sLwPzX7jYByY0tASIWVpTHVAc0G\ne2vDHPvootavOeqAU8lYz7vOfBzOjeXsSOgcRO20C1154P+YswQG5GShZ4w6\n8B/sBBE2Fspa+pBvyraR3ZxfANriKpH+ymd/xBq58I1vPNJnmDu1YKeyrOKF\nQoBj3KBN+8sLZ2gFb0hZziYviYXQnYY1T+guaOaLaHmTS6kTHDVws0R2LkZQ\nmujRnjbmlBeUovbWhF3rHmU72T6bX2QscDtlqNSgvTt6H/6fKj3b/6fyCDyv\nL90ahPoZA9M7gJkbHhR5BLKrIBAm5aTQ0uFuKjmGGlidkqO1QVSA5nZ7uVLZ\n0ZGmSsGNNup1rvQqq5WNz+m8aN34nC3Wr6ZAHyqUUmb+JNavDgGd66xp6cZS\nzjkvVfOG7S3cU+CrEh3QKe7C+b+Vo/hqRQiXydSpaCZNeaWgDqGts116otsY\nj8ye\r\n=FJHs\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "342993f9e3a93bf17179b33711054a7c9efbad8f",
  "homepage": "https://github.com/schnittstabil/merge-options#readme",
  "keywords": [
    "merge",
    "options",
    "deep",
    "plain",
    "object",
    "extend",
    "clone"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "schnittstabil",
      "email": "michael@schnittstabil.de"
    }
  ],
  "name": "merge-options",
  "optionalDependencies": {},
  "readme": "# merge-options [![Build Status](https://travis-ci.org/schnittstabil/merge-options.svg?branch=master)](https://travis-ci.org/schnittstabil/merge-options) [![Coverage Status](https://coveralls.io/repos/schnittstabil/merge-options/badge.svg?branch=master&service=github)](https://coveralls.io/github/schnittstabil/merge-options?branch=master) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/sindresorhus/xo)\n\n\n> Merge Option Objects\n\n`merge-options` considers [plain objects](https://github.com/sindresorhus/is-plain-obj) as *Option Objects*, everything else as *Option Values*.\n\n## Install\n\n```\n$ npm install --save merge-options\n```\n\n## Usage\n\n```js\nconst mergeOptions = require('merge-options');\n\nmergeOptions({foo: 0}, {bar: 1}, {baz: 2}, {bar: 3})\n//=> {foo: 0, bar: 3, baz: 2}\n\nmergeOptions({nested: {unicorns: 'none'}}, {nested: {unicorns: 'many'}})\n//=> {nested: {unicorns: 'many'}}\n\nmergeOptions({[Symbol.for('key')]: 0}, {[Symbol.for('key')]: 42})\n//=> {Symbol(key): 42}\n```\n\n## API\n\n### mergeOptions(option1, ...options)<br/>mergeOptions.call(config, option1, ...options)<br/>mergeOptions.apply(config, [option1, ...options])\n\n`mergeOptions` recursively merges one or more *Option Objects* into a new one and returns that. The `options` are merged in order, thus *Option Values* of additional `options` take precedence over previous ones.\n\nThe merging does not alter the passed `option` arguments, taking roughly the following steps:\n* recursively cloning<sup><a href=\"#note1\">[1]</a></sup> *Option Objects* and [arrays](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray) until reaching *Option Values*\n* copying<sup><a href=\"#note1\">[1]</a></sup> references to *Option Values* to the result object\n\n\n```js\nconst defaultOpts = {\n\tfn:      () => false,                  // functions are Option Values\n\tpromise: Promise.reject(new Error()),  // all non-plain objects are Option Values\n\tarray:   ['foo'],                      // arrays are Option Values\n\tnested:  {unicorns: 'none'}            // {…} is plain, therefore an Option Object\n};\n\nconst opts = {\n\tfn:      () => true,                   // [1]\n\tpromise: Promise.resolve('bar'),       // [2]\n\tarray:   ['baz'],                      // [3]\n\tnested:  {unicorns: 'many'}            // [4]\n};\n\nmergeOptions(defaultOpts, opts)\n//=>\n{\n\tfn:      [Function],                   // === [1]\n\tpromise: Promise { 'bar' },            // === [2]\n\tarray:   ['baz'],                      // !== [3] (arrays are cloned)\n\tnested:  {unicorns: 'many'}            // !== [4] (Option Objects are cloned)\n}\n```\n\n#### config\n\nType: `object`\n\n##### config.concatArrays\n\nType: `boolean`<br/>Default: `false`\n\nConcatenate arrays:\n\n```js\nmergeOptions({src: ['src/**']}, {src: ['test/**']})\n//=> {src: ['test/**']}\n\n// Via call\nmergeOptions.call({concatArrays: true}, {src: ['src/**']}, {src: ['test/**']})\n//=> {src: ['src/**', 'test/**']}\n\n// Via apply\nmergeOptions.apply({concatArrays: true}, [{src: ['src/**']}, {src: ['test/**']}])\n//=> {src: ['src/**', 'test/**']}\n```\n\n\n## Related\n\n* See [object-assign](https://github.com/sindresorhus/object-assign) if you need a ES2015 Object.assign() ponyfill\n* See [deep-assign](https://github.com/sindresorhus/deep-assign) if you need to do Object.assign() recursively\n\n## Notes\n\n<ol>\n\t<li id=\"note1\">copying and cloning take only enumerable own properties into account</li>\n</ol>\n\n## License\n\nMIT © [Michael Mayer](http://schnittstabil.de)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/schnittstabil/merge-options.git"
  },
  "scripts": {
    "clean": "rimraf .nyc_output/ coverage/",
    "coverage-html": "nyc ava && nyc report --reporter=html",
    "test": "xo && nyc ava"
  },
  "version": "1.0.1"
}
