{
  "_args": [
    [
      {
        "raw": "@webpack-contrib/config-loader@^1.2.0",
        "scope": "@webpack-contrib",
        "escapedName": "@webpack-contrib%2fconfig-loader",
        "name": "@webpack-contrib/config-loader",
        "rawSpec": "^1.2.0",
        "spec": ">=1.2.0 <2.0.0",
        "type": "range"
      },
      "/Users/ktran/Documents/Recipe/client/node_modules/webpack-command"
    ]
  ],
  "_from": "@webpack-contrib/config-loader@>=1.2.0 <2.0.0",
  "_id": "@webpack-contrib/config-loader@1.2.1",
  "_inCache": true,
  "_location": "/@webpack-contrib/config-loader",
  "_nodeVersion": "10.1.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/config-loader_1.2.1_1530568682581_0.7917818381053945"
  },
  "_npmUser": {
    "name": "shellscape",
    "email": "andrew@shellscape.org"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "color-convert": "1.9.2",
    "escape-string-regexp": "1.0.5",
    "has-flag": "3.0.0"
  },
  "_requested": {
    "raw": "@webpack-contrib/config-loader@^1.2.0",
    "scope": "@webpack-contrib",
    "escapedName": "@webpack-contrib%2fconfig-loader",
    "name": "@webpack-contrib/config-loader",
    "rawSpec": "^1.2.0",
    "spec": ">=1.2.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/webpack-command"
  ],
  "_resolved": "https://registry.npmjs.org/@webpack-contrib/config-loader/-/config-loader-1.2.1.tgz",
  "_shasum": "5b3dd474e207437939d294d200c68b7b00008e04",
  "_shrinkwrap": null,
  "_spec": "@webpack-contrib/config-loader@^1.2.0",
  "_where": "/Users/ktran/Documents/Recipe/client/node_modules/webpack-command",
  "author": {
    "name": "Andrew Powell",
    "email": "andrew@shellscape.org"
  },
  "bugs": {
    "url": "https://github.com/webpack-contrib/config-loader/issues"
  },
  "dependencies": {
    "@webpack-contrib/schema-utils": "^1.0.0-beta.0",
    "chalk": "^2.1.0",
    "cosmiconfig": "^5.0.2",
    "is-plain-obj": "^1.1.0",
    "loud-rejection": "^1.6.0",
    "merge-options": "^1.0.1",
    "minimist": "^1.2.0",
    "resolve": "^1.6.0",
    "webpack-log": "^1.1.2"
  },
  "description": "A webpack configuration loader",
  "devDependencies": {
    "@commitlint/cli": "^7.0.0",
    "@commitlint/config-conventional": "^7.0.1",
    "@webpack-contrib/eslint-config-webpack": "^2.0.4",
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-polyfill": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "babel-register": "^6.26.0",
    "conventional-github-releaser": "^3.1.2",
    "cross-env": "^5.1.4",
    "del": "^3.0.0",
    "del-cli": "^1.1.0",
    "eslint": "^4.19.1",
    "eslint-plugin-import": "^2.10.0",
    "eslint-plugin-prettier": "^2.6.0",
    "esm": "^3.0.15",
    "execa": "^0.10.0",
    "expect": "^23.2.0",
    "flow-remove-types": "^1.2.3",
    "husky": "^0.14.3",
    "jest-serializer-path": "^0.1.15",
    "jest-snapshot": "^23.2.0",
    "lint-staged": "^7.2.0",
    "memory-fs": "^0.4.1",
    "mocha": "^5.0.5",
    "nsp": "^3.2.1",
    "nyc": "^12.0.2",
    "pre-commit": "^1.2.2",
    "prettier": "^1.11.1",
    "standard-version": "^4.3.0",
    "ts-node": "^5.0.1",
    "typescript": "^2.8.1",
    "webpack": "^4.4.1",
    "webpack-defaults": "^2.3.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-C7XsS6bXft0aRlyt7YCLg+fm97Mb3tWd+i5fVVlEl0NW5HKy8LoXVKj3mB7ECcEHNEEdHhgzg8gxP+Or8cMj8Q==",
    "shasum": "5b3dd474e207437939d294d200c68b7b00008e04",
    "tarball": "https://registry.npmjs.org/@webpack-contrib/config-loader/-/config-loader-1.2.1.tgz",
    "fileCount": 12,
    "unpackedSize": 20122,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbOp/qCRA9TVsSAnZWagAAi9AP/248WWPt2OmevdfUx5v9\nBu5skAQxzW5fhx9ZMzxUKwqfPLjRnsONTjtYHExaiEEU9j6/ctWURda54EF6\nRZZLX22b3q+PaVjJmha+pxxHw2VEqhVOJkNAo5cGme6a07xkD3F8HXeoNZK3\nJ3dD79Sz1qWRjqnGk1gEBLPGx6dCAxf1cSwEwR+iZhHoFibNPf8w19jLnHyW\n5mlF4KL7JbPc4qYvzl0PYCcO6zk41hEAoVHn11skQjib5VvacW5BGbPJJb5G\nxTZaZvrnVeyWSwWTm1PDXzrtLPEbrciuxamq0bSVoie7ze84fZN6PB5XtjFT\nLscxMHugxJO/vI9psa7eTKYX/fpd3qCP6LW3PLcyaLirvzQwpuDTGclwRmN6\nTlM6c1XjLYmAolh6Qqtru2mCsfmqrDZ42v5Ov/PcQFAOLYBPq6wdPAnD1g+B\nfrZ2R6NbzS9u45WJbMHDvMa0UkfB7giKkkD8x+Yt97OhavHR0tjlugNUtV43\n+G17C/fREZ1tX+q8PcpY1vJ2/jQLt/BzxUDg8h1YTrOEKkWVJ9KSPuT4S8L5\nUdjJh6zRytD7iO1bviGkdh0mWvNmZnWDZrQcaJ4gmVNnBYop/Zrsf5VFAF9m\nluuc04EmpkLbIRXQTYQ5pigUfbhsH7j6Uc1VKK57SUVWm7SNQDc+8cHT1h4w\nXQJN\r\n=L7f2\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 6.9.0 <7.0.0 || >= 8.9.0"
  },
  "files": [
    "lib/",
    "index.js"
  ],
  "gitHead": "18e0494a50bcdb75185d776d25f7a261f3d77a1f",
  "homepage": "https://github.com/webpack-contrib/config-loader",
  "keywords": [
    "webpack"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    },
    {
      "name": "d3viant0ne",
      "email": "wiens.joshua@gmail.com"
    },
    {
      "name": "evilebottnawi",
      "email": "sheo13666q@gmail.com"
    },
    {
      "name": "jhnns",
      "email": "mail@johannesewald.de"
    },
    {
      "name": "jtangelder",
      "email": "j.tangelder@gmail.com"
    },
    {
      "name": "michael-ciniawsky",
      "email": "michael.ciniawsky@gmail.com"
    },
    {
      "name": "shellscape",
      "email": "andrew@shellscape.org"
    },
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    },
    {
      "name": "thelarkinn",
      "email": "sean.larkin@cuw.edu"
    }
  ],
  "name": "@webpack-contrib/config-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^4.3.0"
  },
  "pre-commit": "lint-staged",
  "publishConfig": {
    "access": "public"
  },
  "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![chat][chat]][chat-url]\n\n# config-loader\n\nA webpack configuration loader.\n\nThis module utilizes [`cosmiconfig`](https://github.com/davidtheclark/cosmiconfig)\nwhich supports declaring a webpack configuration in a number of different file\nformats including; `.webpackrc`, `webpack.config.js`, and a `webpack` property\nin a `package.json`.\n\n`config-loader` supports configuration modules which export an `Object`, `Array`,\n`Function`, `Promise`, and `Function` which returns a `Promise`.\n\nThe module also validates found configurations against webpack's options schema\nto ensure that the configuration is correct before webpack attempts to use it.\n\n## Requirements\n\nThis module requires a minimum of Node v6.9.0 and Webpack v4.0.0.\n\n## Getting Started\n\nTo begin, you'll need to install `config-loader`:\n\n```console\n$ npm install @webpack-contrib/config-loader --save-dev\n```\n\nAnd get straight to loading a config:\n\n```js\nconst loader = require('@webpack-contrib/config-loader');\nconst options = { ... };\n\nloader(options).then((result) => {\n  // ...\n  // result = { config: Object, configPath: String }\n});\n\n```\n\n## Extending Configuration Files\n\nThis module supports extending webpack configuration files with\n[ESLint-style](https://eslint.org/docs/user-guide/configuring#extending-configuration-files)\n`extends` functionality. This feature allows users to create a \"base\" config and\nin essence, \"inherit\" from that base config in a separate config. A bare-bones\nexample:\n\n```js\n// base.config.js\nmodule.exports = {\n  name: 'base',\n  mode: 'development',\n  plugins: [...]\n}\n```\n\n```js\n// webpack.config.js\nmodule.exports = {\n  extends: path.join(..., 'base-config.js'),\n  name: 'dev'\n```\n\nThe resulting configuration object would resemble:\n\n```js\n// result\n{\n  name: 'dev',\n  mode: 'development',\n  plugins: [...]\n}\n```\n\nThe `webpack.config.js` file will be intelligently extended with properties\nfrom `base.config.js`.\n\nThe `extends` property also supports naming installed NPM modules which export\nwebpack configurations. Various configuration properties can also be filtered in\ndifferent ways based on need.\n\n[Read More about Extending Configuration Files](./docs/EXTENDS.md)\n\n## Gotchas\n\nWhen using a configuration file that exports a `Function`, users of `webpack-cli`\nhave become accustom to the function signature:\n\n```\nfunction config (env, argv)\n```\n\n`webpack-cli` provides any CLI flags prefixed with `--env` as a single object in\nthe `env` parameter, which is an unnecessary feature.\n[Environment Variables](https://en.wikipedia.org/wiki/Environment_variable#Syntax)\nhave long served the same purpose, and are easily accessible within a\n[Node environment](https://nodejs.org/api/process.html#process_process_env).\n\nAs such, `config-loader` does not call `Function` configs with the `env`\nparameter. Rather, it makes calls with only the `argv` parameter.\n\n## Supported Compilers\n\nThis module can support non-standard JavaScript file formats when a compatible\ncompiler is registered via the `require` option. If the option is defined,\n`config-loader` will attempt to require the specified module(s) before the\ntarget config is found and loaded.\n\nAs such, `config-loader` will also search for the following file extensions;\n`.js`, `.es6`, `.flow`, `.mjs`, and `.ts`.\n\nThe module is also tested with the following compilers:\n\n- [`babel-register`](https://github.com/babel/babel/tree/6.x/packages/babel-register)\n- [`flow-remove-types/register`](https://github.com/flowtype/flow-remove-types)\n- [`ts-node/register`](https://www.npmjs.com/package/ts-node)\n\n_Note: Compilers are not part of or built-into this module. To use a specific compiler, you\nmust install it and specify its use by using the `--require` CLI flag._\n\n## API\n\n### loader([options])\n\nReturns a `Promise`, which resolves with an `Object` containing:\n\n#### `config`\n\nType: `Object`\n\nContains the actual configuration object.\n\n#### `configPath`\n\nType: `String`\n\nContains the full, absolute filesystem path to the configuration file.\n\n## Options\n\n#### `allowMissing`\n\nType: `Boolean`  \nDefault: `false`\n\nInstructs the module to allow a missing config file, and returns an `Object`\nwith empty `config` and `configPath` properties in the event a config file was\nnot found.\n\n### `configPath`\n\nType: `String`\nDefault: `undefined`\n\nSpecifies an absolute path to a valid configuration file on the filesystem.\n\n### `cwd`\n\nType: `String`\nDefault: `process.cwd()`\n\nSpecifies an filesystem path from which point `config-loader` will begin looking\nfor a configuration file.\n\n### `require`\n\nType: `String | Array[String]`\nDefault: `undefined`\n\nSpecifies compiler(s) to use when loading modules from files containing the\nconfiguration. For example:\n\n```js\nconst loader = require('@webpack-contrib/config-loader');\nconst options = { require: 'ts-node/register' };\n\nloader(options).then((result) => { ... });\n\n```\n\nSee\n[Supported Compilers](https://github.com/webpack-contrib/config-loader#supported-compilers)\nfor more information.\n\n### `schema`\n\nType: `Object`\nDefault: `undefined`\n\nAn object containing a valid\n[JSON Schema Definition](http://json-schema.org/latest/json-schema-validation.html).\n\nBy default, `config-loader` validates your webpack config against the\n[webpack config schema](https://github.com/webpack/webpack/blob/master/schemas/WebpackOptions.json).\nHowever, it can be useful to append additional schema data to allow configs,\nwhich contain properties not present in the webpack schema, to pass validation.\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n#### [CONTRIBUTING](./.github/CONTRIBUTING)\n\n## License\n\n#### [MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/@webpack-contrib/config-loader.svg\n[npm-url]: https://npmjs.com/package/@webpack-contrib/config-loader\n\n[node]: https://img.shields.io/node/v/@webpack-contrib/config-loader.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/webpack-contrib/config-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/config-loader\n\n[tests]: \thttps://img.shields.io/circleci/project/github/webpack-contrib/config-loader.svg\n[tests-url]: https://circleci.com/gh/webpack-contrib/config-loader\n\n[cover]: https://codecov.io/gh/webpack-contrib/config-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/config-loader\n\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/config-loader.git"
  },
  "scripts": {
    "ci:coverage": "npm run test:coverage -- --runInBand",
    "ci:lint": "npm run lint && npm run security",
    "ci:lint:commits": "commitlint --from=${CIRCLE_BRANCH} --to=${CIRCLE_SHA1}",
    "ci:test": "npm run test -- --runInBand",
    "commitlint": "commitlint",
    "commitmsg": "commitlint -e $GIT_PARAMS",
    "defaults": "webpack-defaults",
    "lint": "eslint --cache lib test",
    "lint-staged": "lint-staged",
    "release": "standard-version",
    "release:ci": "conventional-github-releaser -p angular",
    "release:validate": "commitlint --from=$(git describe --tags --abbrev=0) --to=$(git rev-parse HEAD)",
    "security": "nsp check",
    "test": "mocha test/test.js --exit --mode=superman",
    "test:coverage": "mkdir -p coverage && nyc --silent npm test && npm run test:coverage:report",
    "test:coverage:report": "nyc report --reporter=lcov --reporter=text-lcov --reporter=json --reporter=clover > coverage/lcov.info"
  },
  "version": "1.2.1",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": ">= 6.9.0 <7.0.0 || >= 8.9.0"
      },
      "pkgid": "@webpack-contrib/config-loader@1.2.1"
    }
  ]
}
